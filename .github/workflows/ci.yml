name: ci
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    # Give your job a name that will show up in the GitHub Actions web UI
    name: ESLint
    # We'll run this on a Linux (Ubuntu) VM, since we'll deploy on Linux too.
    runs-on: ubuntu-latest
    # We run these steps one after the other, and if any fail, we stop the process
    steps:
      # https://github.com/actions/checkout
      - name: Check out code
        uses: actions/checkout@v3

      # https://github.com/actions/setup-node
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          # Use node LTS version 18 - https://github.com/actions/setup-node#supported-version-syntax
          node-version: "18"
          # Cache npm dependencies so they don't have to be downloaded next time - https://github.com/actions/setup-node#caching-packages-dependencies
          cache: "npm"

      - name: Install node dependencies
        # Use `ci` vs. `install`, see https://docs.npmjs.com/cli/v8/commands/npm-ci
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/hadolint-action
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          ignore: DL3008 # Ignore the "pin versions in apk add. Instead of `apk add <package>` use `apk add <package>=<version>`" warning

  docker-hub:
    name: Build and Push to Docker Hub
    # Don't bother running this job unless the other three all pass
    needs: [dockerfile-lint, lint]
    runs-on: ubuntu-latest
    env:
      # Define an Environment Variable with our Docker Hub Repo
      DOCKERHUB_REPO: benakdev/fragments-ui
      # Define an Environment Variable with the current git commit's
      # sha: sha-87f664e01bb5f242faa411e9e7fb9e75a58ae767
      # Use the `github` context to get this, see:
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      SHA_TAG: sha-${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - run: docker build . --file Dockerfile --tag ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }} --tag ${{ env.DOCKERHUB_REPO }}:main --tag ${{ env.DOCKERHUB_REPO }}:latest
        # Use 3 tags :sha-sha-7d821bd14e0d6c381dc57a5369ae1a3a9220664f, :main, and :latest