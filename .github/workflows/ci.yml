name: ci
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    # Give your job a name that will show up in the GitHub Actions web UI
    name: ESLint
    # We'll run this on a Linux (Ubuntu) VM, since we'll deploy on Linux too.
    runs-on: ubuntu-latest
    # We run these steps one after the other, and if any fail, we stop the process
    steps:
      # https://github.com/actions/checkout
      - name: Check out code
        uses: actions/checkout@v3

      # https://github.com/actions/setup-node
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          # Use node LTS version 18 - https://github.com/actions/setup-node#supported-version-syntax
          node-version: "18"
          # Cache npm dependencies so they don't have to be downloaded next time - https://github.com/actions/setup-node#caching-packages-dependencies
          cache: "npm"

      - name: Install node dependencies
        # Use `ci` vs. `install`, see https://docs.npmjs.com/cli/v8/commands/npm-ci
        run: npm ci

      - name: Run ESLint
        run: npm run lint

  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/hadolint-action
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          ignore: DL3008 # Ignore the "pin versions in apk add. Instead of `apk add <package>` use `apk add <package>=<version>`" warning

  docker-hub:
    name: Build and Push to Docker Hub
    # Don't bother running this job unless the other three all pass
    needs: [dockerfile-lint, lint]
    runs-on: ubuntu-latest
    steps:
      # Set up buildx for optimal Docker Builds, see:
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Docker Hub using GitHub secrets, see:
      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build and Push an Image to Docker Hub
      - name: Build and push
        env:
          # Define an Environment Variable with our Docker Hub Repo
          DOCKERHUB_REPO: benakdev/fragments-ui
          # Define an Environment Variable with the current git commit's
          # sha: sha-87f664e01bb5f242faa411e9e7fb9e75a58ae767
          # Use the `github` context to get this, see:
          # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
          SHA_TAG: sha-${{ github.sha }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_REGION: ${{ secrets.NEXT_PUBLIC_REGION }}
          NEXT_PUBLIC_AWS_COGNITO_POOL_ID: ${{ secrets.NEXT_PUBLIC_AWS_COGNITO_POOL_ID }}
          NEXT_PUBLIC_AWS_COGNITO_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_AWS_COGNITO_CLIENT_ID }}
          NEXT_PUBLIC_AWS_COGNITO_HOSTED_UI_DOMAIN: ${{ secrets.NEXT_PUBLIC_AWS_COGNITO_HOSTED_UI_DOMAIN }}
          NEXT_PUBLIC_OAUTH_SIGN_IN_REDIRECT_URL: ${{ secrets.NEXT_PUBLIC_OAUTH_SIGN_IN_REDIRECT_URL }}
          NEXT_PUBLIC_OAUTH_SIGN_OUT_REDIRECT_URL: ${{ secrets.NEXT_PUBLIC_OAUTH_SIGN_OUT_REDIRECT_URL }}
        uses: docker/build-push-action@v4
        with:
          push: true
          # Use 3 tags :sha-sha-7d821bd14e0d6c381dc57a5369ae1a3a9220664f, :main, and :latest
          tags: ${{ env.DOCKERHUB_REPO }}:${{ env.SHA_TAG }}, ${{ env.DOCKERHUB_REPO }}:main, ${{ env.DOCKERHUB_REPO }}:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_REGION=${{ env.NEXT_PUBLIC_REGION }}
            NEXT_PUBLIC_AWS_COGNITO_POOL_ID=${{ env.NEXT_PUBLIC_AWS_COGNITO_POOL_ID }}
            NEXT_PUBLIC_AWS_COGNITO_CLIENT_ID=${{ env.NEXT_PUBLIC_AWS_COGNITO_CLIENT_ID }}
            NEXT_PUBLIC_AWS_COGNITO_HOSTED_UI_DOMAIN=${{ env.NEXT_PUBLIC_AWS_COGNITO_HOSTED_UI_DOMAIN }}
            NEXT_PUBLIC_OAUTH_SIGN_IN_REDIRECT_URL=${{ env.NEXT_PUBLIC_OAUTH_SIGN_IN_REDIRECT_URL }}
            NEXT_PUBLIC_OAUTH_SIGN_OUT_REDIRECT_URL=${{ env.NEXT_PUBLIC_OAUTH_SIGN_OUT_REDIRECT_URL }}
